name: reusable-build-and-push

on:
  workflow_call:
    inputs:
      environment:
        type: string
        description: GitHub environment to use
        required: true
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  build:
    name: Build and push to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v2

      - name: Create env var for docker tag
        run: echo "TAG=$(date +%s)" >> "$GITHUB_ENV"

      - name: Create env var for git sha tag
        run: echo "HASH=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"

      - name: Create env var for ECR repo
        run: echo "ECR_REPOSITORY=security-hub-collector" >> "$GITHUB_ENV"

    - name: Get prod credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::037370603820:role/delegatedadmin/developer/security-hub-collector-github-oidc
        role-session-name: github
        aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build the Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        # for now, we're not using the latest tag since other consumers of this image are not yet ready to use it yet. We'll use the v2 tag for now.
        run: docker build . --file Dockerfile --tag $ECR_REGISTRY/$ECR_REPOSITORY:${TAG} --tag $ECR_REGISTRY/$ECR_REPOSITORY:v2 --tag $ECR_REGISTRY/$ECR_REPOSITORY:${HASH}
      
      - name: Push docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags
